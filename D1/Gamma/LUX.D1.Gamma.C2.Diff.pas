unit LUX.D1.Gamma.C2.Diff;

interface //#################################################################### ■

uses LUX,
     LUX.D1.Diff,
     LUX.Complex.Diff;

//type //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 T Y P E 】

     //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 R E C O R D 】

     //$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 C L A S S 】

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 R O U T I N E 】

function Gamma( const X_:TdSingleC ) :TdSingleC; overload;
function Gamma( const X_:TdDoubleC ) :TdDoubleC; overload;

implementation //############################################################### ■

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 R E C O R D 】

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 C L A S S 】

//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$【 R O U T I N E 】

function Gamma( const X_:TdSingleC ) :TdSingleC;
var
   X, W, U, V, Y :TdSingleC;
   T :TdSingle;
begin
     X := X_;

     if X.R < 0 then
     begin
          W.R := 1 - X.R;
          W.I := 0 - X.I;
     end
     else W := X;

     U.R := W.R + 6.00009857740312429;

     V.R := U.R * ( W.R + 4.99999857982434025 ) - W.I * W.I;
     V.I := W.I * ( W.R + 4.99999857982434025 ) + U.R * W.I;

     Y.R := U.R * 13.2280130755055088 + V.R * 66.2756400966213521 + 0.293729529320536228;
     Y.I := W.I * 13.2280130755055088 + V.I * 66.2756400966213521;

     U.R := V.R * ( W.R + 4.00000003016801681 ) - V.I * W.I;
     U.I := V.I * ( W.R + 4.00000003016801681 ) + V.R * W.I;

     V.R := U.R * ( W.R + 2.99999999944915534 ) - U.I * W.I;
     V.I := U.I * ( W.R + 2.99999999944915534 ) + U.R * W.I;

     Y.R := Y.R + U.R * 91.1395751189899762 + V.R * 47.3821439163096063;
     Y.I := Y.I + U.I * 91.1395751189899762 + V.I * 47.3821439163096063;

     U.R := V.R * ( W.R + 2.00000000000603851 ) - V.I * W.I;
     U.I := V.I * ( W.R + 2.00000000000603851 ) + V.R * W.I;

     V.R := U.R * ( W.R + 0.999999999999975753 ) - U.I * W.I;
     V.I := U.I * ( W.R + 0.999999999999975753 ) + U.R * W.I;

     Y.R := Y.R + U.R * 10.5400280458730808 + V.R;
     Y.I := Y.I + U.I * 10.5400280458730808 + V.I;

     U.R := V.R * W.R - V.I * W.I;
     U.I := V.I * W.R + V.R * W.I;

     T  := U.Siz2;

     V.R := Y.R * U.R + Y.I * U.I + T * 0.0327673720261526849;
     V.I := Y.I * U.R - Y.R * U.I;

     Y.R := W.R + 7.31790632447016203;

     U.R := Ln( Y.R * Y.R + W.I * W.I ) * 0.5 - 1;
     U.I := ArcTan2( W.I, Y.R );

     Y.R := Exp( U.R * ( W.R - 0.5 ) - U.I * W.I - 3.48064577727581257 ) / T;
     Y.I :=      U.I * ( W.R - 0.5 ) + U.R * W.I;

     U.R := Y.R * Cos( Y.I );
     U.I := Y.R * Sin( Y.I );

     Y.R := U.R * V.R - U.I * V.I;
     Y.I := U.I * V.R + U.R * V.I;

     if X.R < 0 then
     begin
          W.R :=      X.R * Pi;
          W.I := Exp( X.I * Pi );

          V.I := 1 / W.I;

          U.R := ( V.I + W.I ) * Sin( W.R );
          U.I := ( V.I - W.I ) * Cos( W.R );

          V.R := U.R * Y.R + U.I * Y.I;
          V.I := U.I * Y.R - U.R * Y.I;

          U.R := Pi2 / V.Siz2;

          Y.R := U.R * V.R;
          Y.I := U.R * V.I;
     end;

     Result := Y;
end;

function Gamma( const X_:TdDoubleC ) :TdDoubleC;
var
   X, W, U, V, Y :TdDoubleC;
   T :TdDouble;
begin
     X := X_;

     if X.R < 0 then
     begin
          W.R := 1 - X.R;
          W.I := 0 - X.I;
     end
     else W := X;

     U.R := W.R + 6.00009857740312429;

     V.R := U.R * ( W.R + 4.99999857982434025 ) - W.I * W.I;
     V.I := W.I * ( W.R + 4.99999857982434025 ) + U.R * W.I;

     Y.R := U.R * 13.2280130755055088 + V.R * 66.2756400966213521 + 0.293729529320536228;
     Y.I := W.I * 13.2280130755055088 + V.I * 66.2756400966213521;

     U.R := V.R * ( W.R + 4.00000003016801681 ) - V.I * W.I;
     U.I := V.I * ( W.R + 4.00000003016801681 ) + V.R * W.I;

     V.R := U.R * ( W.R + 2.99999999944915534 ) - U.I * W.I;
     V.I := U.I * ( W.R + 2.99999999944915534 ) + U.R * W.I;

     Y.R := Y.R + U.R * 91.1395751189899762 + V.R * 47.3821439163096063;
     Y.I := Y.I + U.I * 91.1395751189899762 + V.I * 47.3821439163096063;

     U.R := V.R * ( W.R + 2.00000000000603851 ) - V.I * W.I;
     U.I := V.I * ( W.R + 2.00000000000603851 ) + V.R * W.I;

     V.R := U.R * ( W.R + 0.999999999999975753 ) - U.I * W.I;
     V.I := U.I * ( W.R + 0.999999999999975753 ) + U.R * W.I;

     Y.R := Y.R + U.R * 10.5400280458730808 + V.R;
     Y.I := Y.I + U.I * 10.5400280458730808 + V.I;

     U.R := V.R * W.R - V.I * W.I;
     U.I := V.I * W.R + V.R * W.I;

     T  := U.Siz2;

     V.R := Y.R * U.R + Y.I * U.I + T * 0.0327673720261526849;
     V.I := Y.I * U.R - Y.R * U.I;

     Y.R := W.R + 7.31790632447016203;

     U.R := Ln( Y.R * Y.R + W.I * W.I ) * 0.5 - 1;
     U.I := ArcTan2( W.I, Y.R );

     Y.R := Exp( U.R * ( W.R - 0.5 ) - U.I * W.I - 3.48064577727581257 ) / T;
     Y.I :=      U.I * ( W.R - 0.5 ) + U.R * W.I;

     U.R := Y.R * Cos( Y.I );
     U.I := Y.R * Sin( Y.I );

     Y.R := U.R * V.R - U.I * V.I;
     Y.I := U.I * V.R + U.R * V.I;

     if X.R < 0 then
     begin
          W.R :=      X.R * Pi;
          W.I := Exp( X.I * Pi );

          V.I := 1 / W.I;

          U.R := ( V.I + W.I ) * Sin( W.R );
          U.I := ( V.I - W.I ) * Cos( W.R );

          V.R := U.R * Y.R + U.I * Y.I;
          V.I := U.I * Y.R - U.R * Y.I;

          U.R := Pi2 / V.Siz2;

          Y.R := U.R * V.R;
          Y.I := U.R * V.I;
     end;

     Result := Y;
end;

end. //######################################################################### ■